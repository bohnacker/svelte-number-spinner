{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "App2.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import NumberSpinner from \"../../dist/index.js\";\n\n  let value1 = 100;\n  let value2 = 500;\n  let value3 = 3.28;\n  let value4 = 0.5;\n  let value5 = 0.5;\n  let value6 = 50;\n  let value6input = value6;\n  let value6change = value6;\n  let value7 = 0;\n\n  let name = \"hallo\";\n  \n</script>\n\n\n\n<h2>Svelte Number Spinner Example</h2>\n\n<!-- <input bind:value={name} placeholder=\"enter your name\"> -->\n\n<p>\n  Change the values of the number spinners through mousedrag and arrow keys. Press <i>Alt</i> for smaller steps, <i>Alt+Shift</i> for larger steps. Double click to edit.\n</p>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">Default: no range limits, step = 1<br>Current value is {value1}</div> \n  <div class=\"right\">\n    <NumberSpinner bind:value={value1} />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">Range: 0 - 1000, only horizontal dragging and arrow keys left/right will change the value.<br>Current value is {value2}</div> \n  <div class=\"right\">\n    <NumberSpinner bind:value={value2} min=0 max=1000 vertical={false} />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">Step = 0.01, precision = 2 decimals<br>Current value is {value3}</div> \n  <div class=\"right\">\n    <NumberSpinner bind:value={value3} min=-5 max=5 step=0.01 decimals=2 />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">Individual styling using props.<br>Current value is {value4}</div> \n  <div class=\"right\">\n    <NumberSpinner bind:value={value4} step=10 \n        mainStyle='color:#aaa; width:80px; border-radius:20px' \n        focusStyle='color:#06f'\n        editingStyle='color:#00f; background-color:#06f4' \n        fastStyle='color:#f00'\n        slowStyle='color:#0c0' \n    />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">Individual styling using custom class.<br>Current value is {value5}</div> \n  <div class=\"right\">\n    <NumberSpinner bind:value={value5} min=0 max=1 step=0.001 decimals=3 \n        class='number-spinner-custom' \n    />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">\n    Get value through input and change events.<br>\n    Current input value is {value6input}<br> \n    Current change value is {value6change}\n  </div> \n  <div class=\"right\">\n    <NumberSpinner value={value6} min=0 max=100 \n        on:change={(ev) => {value6change = ev.detail}} \n        on:input={(ev) => {value6input = ev.detail}} \n    />\n  </div> \n</div>\n\n<hr>\n\n<div class=\"row\">\n  <div class=\"explanation\">\n    Test correct updating of the value if changed from outside.<br>\n    Current input value is {value7}<br> \n  </div> \n  <div><button on:click={() => {value7--}}>â€“</button></div>\n  <div class=\"right\">\n    <NumberSpinner bind:value={value7} min=0 />\n  </div> \n  <div><button on:click={() => {value7++}}>+</button></div>\n</div>\n\n<hr>\n\n<!-- ---------------------------------------------------------------- -->\n\n<style>\n\n  hr {\n    margin: 20px 0px;\n  }\n\n  div {\n    display: flex;\n  }\n  div.row {\n    justify-content: space-between;\n    align-items: center;\n  }\n  div.explanation {\n    flex-grow: 6;\n  }\n  div.right {\n    margin:0px 40px;\n  }\n\n  button {\n    margin: 5px;\n  }\n\n  /* custom class for the number spinner */\n\n  :global(.number-spinner-custom) {\n    display: inline-block;\n    box-sizing: border-box;\n    font-variant-numeric: tabular-nums;\n    width: 60px;\n    height: 25px;\n    margin: 0px;\n    padding: 3px;\n    background-color: #06f9;\n    color: white;\n    border-radius: 0px;\n    border: none;\n    text-align: right;\n    cursor: initial;\n  }\n\n  :global(.number-spinner-custom):focus {\n    background-color: #000;\n    outline:none;\n  }\n\n  :global(.number-spinner-custom).fast {\n    background-color: #0ccb;\n  }\n\n  :global(.number-spinner-custom).slow {\n    background-color: #66fb;\n  }\n\n  :global(.number-spinner-custom).editing {\n    background-color: #f00;\n    cursor: default;\n  }\n\n\n</style>",
    "<script>\n\timport NumberSpinner from \"../../dist/index.js\";\n\n  let value1 = 100;\n  let value2 = 50;\n  let logs = [];\n  \n</script>\n\n<!-- ------------------------------------- -->\n\n<div class=\"row\">\n  <NumberSpinner bind:value={value1} on:consoleLog={(e) => logs = [...logs, e.detail]} />\n</div>\n\n<hr>\n\n<div class=\"row\">\n  <NumberSpinner bind:value={value2} />\n</div>\n\n<hr>\n\n<div class=\"console\">\n  {#each logs as log}\n    {log}<br>\n  {/each}\n</div>\n\n<!-- ------------------------------------- -->\n\n<style>\n\n  hr {\n    margin: 20px 0px;\n  }\n\n  div.row {\n    padding-top: 30px;\n    text-align: center;\n  }\n\n  div.console {\n    font-size: 10px;\n    /*margin:0px 40px;*/\n\n  }\n\n</style>"
  ],
  "names": [],
  "mappings": "AAoHE,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,GAAG,AAClB,CAAC,AAED,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,AACf,CAAC,AACD,GAAG,IAAI,cAAC,CAAC,AACP,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,GAAG,YAAY,cAAC,CAAC,AACf,SAAS,CAAE,CAAC,AACd,CAAC,AACD,GAAG,MAAM,cAAC,CAAC,AACT,OAAO,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,GAAG,AACb,CAAC,AAIO,sBAAsB,AAAE,CAAC,AAC/B,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,UAAU,CACtB,oBAAoB,CAAE,YAAY,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AAEO,sBAAsB,AAAC,MAAM,AAAC,CAAC,AACrC,gBAAgB,CAAE,IAAI,CACtB,QAAQ,IAAI,AACd,CAAC,AAEO,sBAAsB,AAAC,KAAK,AAAC,CAAC,AACpC,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAEO,sBAAsB,AAAC,KAAK,AAAC,CAAC,AACpC,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAEO,sBAAsB,AAAC,QAAQ,AAAC,CAAC,AACvC,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,OAAO,AACjB,CAAC;AC3ID,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,GAAG,AAClB,CAAC,AAED,GAAG,IAAI,eAAC,CAAC,AACP,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,GAAG,QAAQ,eAAC,CAAC,AACX,SAAS,CAAE,IAAI,AAGjB,CAAC"
}